// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
  baseUrl:
    | "http://localhost:8888/api"
    | "https://localhost:8888/api"
    | (string & {});
};

export type DbRole = "admin" | "operator" | "viewer";

export type DbUser = {
  created_at?: string;
  email?: string;
  enabled?: boolean;
  id?: number;
  last_login_at?: string;
  role?: DbRole;
  updated_at?: string;
  username?: string;
};

export type MainSetOptionRequest = {
  value: string;
};

export type MainLoginRequest = {
  password: string;
  username: string;
};

export type MainLoginResponse = {
  expires_at?: string;
  token?: string;
  user?: DbUser;
};

export type MainOnboardingRequest = {
  email: string;
  name: string;
  password: string;
};

export type GetAuthCsrfData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/auth/csrf";
};

export type GetAuthCsrfResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: string;
  };
};

export type GetAuthCsrfResponse =
  GetAuthCsrfResponses[keyof GetAuthCsrfResponses];

export type PostAuthLoginData = {
  /**
   * Login credentials
   */
  body: MainLoginRequest;
  path?: never;
  query?: never;
  url: "/auth/login";
};

export type PostAuthLoginErrors = {
  /**
   * Bad Request
   */
  400: {
    [key: string]: string;
  };
  /**
   * Unauthorized
   */
  401: {
    [key: string]: string;
  };
};

export type PostAuthLoginError = PostAuthLoginErrors[keyof PostAuthLoginErrors];

export type PostAuthLoginResponses = {
  /**
   * OK
   */
  200: MainLoginResponse;
};

export type PostAuthLoginResponse =
  PostAuthLoginResponses[keyof PostAuthLoginResponses];

export type PostAuthLogoutData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/auth/logout";
};

export type PostAuthLogoutErrors = {
  /**
   * Unauthorized
   */
  401: {
    [key: string]: string;
  };
};

export type PostAuthLogoutError =
  PostAuthLogoutErrors[keyof PostAuthLogoutErrors];

export type PostAuthLogoutResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: string;
  };
};

export type PostAuthLogoutResponse =
  PostAuthLogoutResponses[keyof PostAuthLogoutResponses];

export type GetAuthMeData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/auth/me";
};

export type GetAuthMeErrors = {
  /**
   * Unauthorized
   */
  401: {
    [key: string]: string;
  };
};

export type GetAuthMeError = GetAuthMeErrors[keyof GetAuthMeErrors];

export type GetAuthMeResponses = {
  /**
   * OK
   */
  200: DbUser;
};

export type GetAuthMeResponse = GetAuthMeResponses[keyof GetAuthMeResponses];

export type GetBootstrapData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/bootstrap";
};

export type GetBootstrapResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: unknown;
  };
};

export type GetBootstrapResponse =
  GetBootstrapResponses[keyof GetBootstrapResponses];

export type GetChangesData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/changes";
};

export type GetChangesResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: unknown;
  };
};

export type GetChangesResponse = GetChangesResponses[keyof GetChangesResponses];

export type PostCommitData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/commit";
};

export type PostCommitErrors = {
  /**
   * Internal Server Error
   */
  500: {
    [key: string]: string;
  };
};

export type PostCommitError = PostCommitErrors[keyof PostCommitErrors];

export type PostCommitResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: unknown;
  };
};

export type PostCommitResponse = PostCommitResponses[keyof PostCommitResponses];

export type GetConfigByNameData = {
  body?: never;
  path: {
    /**
     * Configuration name (e.g., network, firewall)
     */
    name: string;
  };
  query?: never;
  url: "/config/{name}";
};

export type GetConfigByNameErrors = {
  /**
   * Internal Server Error
   */
  500: {
    [key: string]: string;
  };
};

export type GetConfigByNameError =
  GetConfigByNameErrors[keyof GetConfigByNameErrors];

export type GetConfigByNameResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: unknown;
  };
};

export type GetConfigByNameResponse =
  GetConfigByNameResponses[keyof GetConfigByNameResponses];

export type GetConfigByNameBySectionData = {
  body?: never;
  path: {
    /**
     * Configuration name
     */
    name: string;
    /**
     * Section name or type
     */
    section: string;
  };
  query?: never;
  url: "/config/{name}/{section}";
};

export type GetConfigByNameBySectionErrors = {
  /**
   * Not Found
   */
  404: {
    [key: string]: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    [key: string]: string;
  };
};

export type GetConfigByNameBySectionError =
  GetConfigByNameBySectionErrors[keyof GetConfigByNameBySectionErrors];

export type GetConfigByNameBySectionResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: unknown;
  };
};

export type GetConfigByNameBySectionResponse =
  GetConfigByNameBySectionResponses[keyof GetConfigByNameBySectionResponses];

export type GetConfigByNameBySectionByOptionData = {
  body?: never;
  path: {
    /**
     * Configuration name
     */
    name: string;
    /**
     * Section name
     */
    section: string;
    /**
     * Option key
     */
    option: string;
  };
  query?: never;
  url: "/config/{name}/{section}/{option}";
};

export type GetConfigByNameBySectionByOptionErrors = {
  /**
   * Not Found
   */
  404: {
    [key: string]: string;
  };
};

export type GetConfigByNameBySectionByOptionError =
  GetConfigByNameBySectionByOptionErrors[keyof GetConfigByNameBySectionByOptionErrors];

export type GetConfigByNameBySectionByOptionResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: string;
  };
};

export type GetConfigByNameBySectionByOptionResponse =
  GetConfigByNameBySectionByOptionResponses[keyof GetConfigByNameBySectionByOptionResponses];

export type PutConfigByNameBySectionByOptionData = {
  /**
   * Option value
   */
  body: MainSetOptionRequest;
  path: {
    /**
     * Configuration name
     */
    name: string;
    /**
     * Section name
     */
    section: string;
    /**
     * Option key
     */
    option: string;
  };
  query?: never;
  url: "/config/{name}/{section}/{option}";
};

export type PutConfigByNameBySectionByOptionErrors = {
  /**
   * Bad Request
   */
  400: {
    [key: string]: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    [key: string]: string;
  };
};

export type PutConfigByNameBySectionByOptionError =
  PutConfigByNameBySectionByOptionErrors[keyof PutConfigByNameBySectionByOptionErrors];

export type PutConfigByNameBySectionByOptionResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: string;
  };
};

export type PutConfigByNameBySectionByOptionResponse =
  PutConfigByNameBySectionByOptionResponses[keyof PutConfigByNameBySectionByOptionResponses];

export type GetHealthData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/health";
};

export type GetHealthResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: string;
  };
};

export type GetHealthResponse = GetHealthResponses[keyof GetHealthResponses];

export type PostOnboardingData = {
  /**
   * Admin user details
   */
  body: MainOnboardingRequest;
  path?: never;
  query?: never;
  url: "/onboarding";
};

export type PostOnboardingErrors = {
  /**
   * Bad Request
   */
  400: {
    [key: string]: string;
  };
  /**
   * Conflict
   */
  409: {
    [key: string]: string;
  };
};

export type PostOnboardingError =
  PostOnboardingErrors[keyof PostOnboardingErrors];

export type PostOnboardingResponses = {
  /**
   * OK
   */
  200: MainLoginResponse;
};

export type PostOnboardingResponse =
  PostOnboardingResponses[keyof PostOnboardingResponses];

export type PostRevertData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/revert";
};

export type PostRevertErrors = {
  /**
   * Internal Server Error
   */
  500: {
    [key: string]: string;
  };
};

export type PostRevertError = PostRevertErrors[keyof PostRevertErrors];

export type PostRevertResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: unknown;
  };
};

export type PostRevertResponse = PostRevertResponses[keyof PostRevertResponses];

export type PostValidateData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/validate";
};

export type PostValidateErrors = {
  /**
   * Bad Request
   */
  400: {
    [key: string]: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    [key: string]: string;
  };
};

export type PostValidateError = PostValidateErrors[keyof PostValidateErrors];

export type PostValidateResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: unknown;
  };
};

export type PostValidateResponse =
  PostValidateResponses[keyof PostValidateResponses];
